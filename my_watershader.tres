[gd_resource type="VisualShader" load_steps=5 format=2]

[ext_resource path="res://scenery/Ground034_2K_Color.jpg" type="Texture" id=2]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 2 )
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "inv_camera"

[sub_resource type="VisualShaderNodeTransformMult" id=25]

[resource]
code = "shader_type spatial;
render_mode cull_disabled;

uniform sampler2D tex_frg_11 : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Texture:11
	vec4 tex_frg_11_read = texture(tex_frg_11, UV.xy);
	vec3 n_out11p0 = tex_frg_11_read.rgb;
	float n_out11p1 = tex_frg_11_read.a;

// Output:0
	ALBEDO = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -912, 55 )
modes/cull = 2
nodes/vertex/2/node = SubResource( 24 )
nodes/vertex/2/position = Vector2( -1443, -323 )
nodes/vertex/3/node = SubResource( 25 )
nodes/vertex/3/position = Vector2( -1167, -287 )
nodes/fragment/0/position = Vector2( -1088, 48 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( -1320, -80 )
nodes/fragment/connections = PoolIntArray( 11, 0, 0, 0 )
nodes/light/0/position = Vector2( 1280, -20 )
